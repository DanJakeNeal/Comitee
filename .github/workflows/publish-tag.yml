name: Publish NuGet Package

on:
  push:
    tags:
      - '*'

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          filter: tree:0
        
      - name: Extract branch and tag details
        id: extract_tag_info
        run: |
          BRANCH_NAME=$(git for-each-ref --format '%(refname:lstrip=3)' "$(git rev-parse --symbolic-full-name HEAD^{u})")
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV
          
          TAG_NAME=${GITHUB_REF##*/}
          echo "tag_name=${TAG_NAME}" >> $GITHUB_ENV
          
      - name: Validate tag format
        run: |
          if [ "$BRANCH_NAME" = "main" ]; then
            if [[ ! "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Invalid tag format for main branch: $TAG_NAME"
              exit 1
            fi
          else
            if [[ ! "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-preview\.[0-9]+$ ]]; then
              echo "Invalid tag format for non-main branch: $TAG_NAME"
              exit 1
            fi
          fi
          echo "Tag format validated successfully: $TAG_NAME"
  
  run-tests:
    needs: validate-tag
    uses: ./.github/workflows/run-tests.yml

  publish:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      # - name: Publish to NuGet
      #   run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
