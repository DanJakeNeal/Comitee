name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*'

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Validate tag format
        run: |
          TAG_NAME="${GITHUB_REF_NAME}"
          MAIN_BRANCH="main"

          SEMVER_REGEX="^v[0-9]+\.[0-9]+\.[0-9]+$"
          PRERELEASE_REGEX="^v[0-9]+\.[0-9]+\.[0-9]+-[A-Za-z0-9]+(\.[0-9]+)?$"

          REF_BRANCH=$(git branch -r --contains "$TAG_NAME" | grep -v '\->' | sed 's/origin\///' | xargs || echo "$MAIN_BRANCH")

          if [ "$REF_BRANCH" = "$MAIN_BRANCH" ]; then
            if [[ ! "$TAG_NAME" =~ $SEMVER_REGEX ]]; then
              echo "::error::Tags on '$MAIN_BRANCH' must be full semantic versions like v1.2.3"
              exit 1
            fi
          else
            if [[ ! "$TAG_NAME" =~ $PRERELEASE_REGEX ]]; then
              echo "::error::Tags on non-main branches must be pre-release versions like v1.2.3-beta.1"
              exit 1
            fi
          fi

  run-tests:
    needs: validate-tag
    uses: ./.github/workflows/test-template.yml

    publish:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Update <Version> in .csproj
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          echo "Updating project version to $VERSION"

          # Assumes only one main project .csproj in root or subdir
          CSPROJ_FILE=$(find . -name '*.csproj' | head -n 1)

          echo "Updating $CSPROJ_FILE"
          sed -i 's|<Version>.*</Version>|<Version>'"$VERSION"'</Version>|' "$CSPROJ_FILE"

      - name: Commit updated .csproj
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add *.csproj
          git commit -m "chore: update version to ${{ steps.extract_version.outputs.version }}"
          git push origin HEAD:${GITHUB_REF##*/}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
